/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;
import Model.*;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;
/**
 *
 * @author xyh10
 */
public class ReadPaneMain extends javax.swing.JPanel {
    // table contents
    private DefaultTableModel model;
    private Object[][] data = new Object[25][9];
    private String[] tableTitle = new String [] {
                "Name", "Email ID", "Phone", "Recipe title", "No. of servings", "Is gluten free", "Difficulty level", "No. of Ingredients", "Category"
        };
    
    private HashMap<Integer, Recipe> tableInformation = new HashMap<>();
    private PersonCatelog pc;
    private Main main;
    
    
    /**
     * Creates new form ReadPaneMain
     */
    public ReadPaneMain() {
        initComponents();
        pc = new PersonCatelog();
        
        model = new DefaultTableModel(data, tableTitle);
        Table.setModel(model);
    }
    
    public ReadPaneMain(PersonCatelog pc, Main main){
        initComponents();
        this.pc = pc;
        model = new DefaultTableModel(data, tableTitle);
        Table.setModel(model);
        this.main = main;
    }
    
    public boolean validateChefName(){
        String str = fieldChefName.getText();

        
        if(!str.matches("([A-Za-z]*) ([A-Za-z]*)")){
            JOptionPane.showMessageDialog(this, "Please enter validate name(Example: John Smith!");
            return false;
        }
        return true;
    }
    
    public boolean validateRecipeName(){
        String str = fieldRecipeName.getText();

        
        if(!str.matches("[A-Za-z]*")){
            JOptionPane.showMessageDialog(this, "Please enter validate Recipe name!");
            return false;
        }
        return true;
        
    }
    
    public void setPersonCatelog(PersonCatelog pc){
        this.pc = pc;
    }
    
    public void loadTable(String chiefName, String recipeName){
        // clean the data
        data = new Object[25][9];
        tableInformation = new HashMap<>();
        int index = 0;

        // add all information
        for(Person p:pc.getCatelog()){
            
            if(!chiefName.isEmpty() && !p.matchName(chiefName)){  // to match the name or skill if no name required
                continue;     
            }
            
            for(Recipe recipe:p.getRecipes()){
                if(!recipeName.isEmpty() && !recipeName.equals(recipe.getTitle())){  // to match the name or skill if no name required
                    continue;
                }
//                System.out.println(recipe.getTitle() + " " + chiefName);
                tableInformation.put(index, recipe);
                // name
                data[index][0] = p.getFirstName() + " " + p.getLastName();
                // emial id
                data[index][1] =p.getEmailID();
                // phone
                data[index][2] = p.getEmailID();
                //recipe title
                data[index][3] = recipe.getTitle();
                // no of servings
                data[index][4] = recipe.getNoOfServings();
                // is gluten free
                data[index][5] = recipe.isIsGlutenFree();
                //difficulty level
                data[index][6] = recipe.getDifficultyLevel();
                //no of ingredient
                data[index][7] = recipe.getNoOfIngredient();
                // catefory
                data[index][8] = recipe.getCategory();
                
                index ++;
                if(index == 25) return ;
                
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldChefName = new javax.swing.JTextField();
        fieldRecipeName = new javax.swing.JTextField();
        showTableInfo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(1100, 300));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Table.setBackground(new java.awt.Color(255, 255, 255));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Email ID", "Phone", "Recipe title", "No. of servings", "Is gluten free", "Difficulty level", "No. of Ingredients", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Boolean.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 138, 800, -1));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Recipe information is listed bellow!");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 16, -1, -1));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Search by chef's name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 71, -1, -1));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Search by recipe title");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 112, -1, -1));

        fieldChefName.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(fieldChefName, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 68, 220, -1));

        fieldRecipeName.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(fieldRecipeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 109, 220, -1));

        showTableInfo.setText("Search");
        showTableInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTableInfoActionPerformed(evt);
            }
        });
        jPanel1.add(showTableInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Click table to see detailed information!");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void showTableInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTableInfoActionPerformed
        // TODO add your handling code here:
        String chefName = fieldChefName.getText();
        if(!chefName.trim().isEmpty() && !validateChefName()) return;
        
        System.out.println(chefName);
            
        String recipeName = fieldRecipeName.getText();
        if(!recipeName.trim().isEmpty() && !validateRecipeName()) return ;
        
        System.out.println(recipeName);
        

        loadTable(chefName, recipeName);
        Table.setModel(new DefaultTableModel(data, tableTitle));
    }//GEN-LAST:event_showTableInfoActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:        
     
        // find the row be clicked
        int row = Table.getSelectedRow();
        
        // if click an empty row, return 
        if(!tableInformation.containsKey(row)) return ; 
            
        // find the recipe and go to detail info page
        Recipe recipe = tableInformation.get(row);
        main.goDetailedReadPane(recipe);
        
        
    }//GEN-LAST:event_TableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JTextField fieldChefName;
    private javax.swing.JTextField fieldRecipeName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton showTableInfo;
    // End of variables declaration//GEN-END:variables
}
